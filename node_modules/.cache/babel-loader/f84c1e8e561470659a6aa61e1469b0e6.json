{"ast":null,"code":"var _jsxFileName = \"X:\\\\Programming\\\\countries\\\\src\\\\Card.jsx\",\n    _s = $RefreshSig$();\n\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: \"5rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexBasis: \"45%\",\n    padding: \"1rem\",\n    paddingTop: \"2rem\",\n    boxShadow: \"none\",\n    [\"@media (max-width:780px)\"]: {\n      width: \"100%\",\n      padding: \"0\"\n    }\n  },\n  header: {\n    textAlign: \"center\"\n  },\n  media: {\n    height: \"18rem\",\n    width: \"100%\"\n  },\n  content: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  rowCont: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  subCont: {\n    width: \"50%\",\n    paddingLeft: \"0.5rem\"\n  },\n  league: {\n    textAlign: \"center\",\n    paddingTop: \"1rem\"\n  }\n}));\n\nvar Cards = props => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      className: classes.header,\n      title: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n      className: classes.media,\n      image: props.flag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.rowCont,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.subCont,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"initial\",\n            children: [\"Capital:\", props.capital]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.subCont,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"initial\",\n            children: [\"Region:\", props.region]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.rowCont,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.subCont,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"initial\",\n            children: [\"Sub Region:\", props.subRegion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.subCont,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"initial\",\n            children: [\"Population:\", props.population]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.rowCont,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.subCont,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"initial\",\n            children: [\"Area:\", props.area, \" km\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.subCont,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"initial\",\n            children: [\"Borders:\", props.borders.map(i => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", i, \",\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.rowCont,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.subCont,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"initial\",\n            children: [\"Native name: \", props.nativeName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.subCont,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"initial\",\n            children: [\"languages:\", props.languages.map(i => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", i.name, \",\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.rowCont,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.subCont,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"initial\",\n            children: [\"Calling Codes:\", props.callingCode.map(i => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", i, \",\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.subCont,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"initial\",\n            children: [\"Regional Blocks:\", props.regionalBlocks.map(i => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", i.name, \",\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cards, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["X:/Programming/countries/src/Card.jsx"],"names":["Card","CardHeader","CardMedia","CardContent","makeStyles","Typography","useStyles","theme","root","paddingTop","display","flexDirection","flexBasis","padding","boxShadow","width","header","textAlign","media","height","content","rowCont","justifyContent","subCont","paddingLeft","league","Cards","props","classes","name","flag","capital","region","subRegion","population","area","borders","map","i","nativeName","languages","callingCode","regionalBlocks"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,MADR;AAEJC,IAAAA,OAAO,EAAE,MAFL;AAGJC,IAAAA,aAAa,EAAE,QAHX;AAIJC,IAAAA,SAAS,EAAE,KAJP;AAKJC,IAAAA,OAAO,EAAE,MALL;AAMJJ,IAAAA,UAAU,EAAE,MANR;AAOJK,IAAAA,SAAS,EAAE,MAPP;AAQJ,KAAC,0BAAD,GAA8B;AAC5BC,MAAAA,KAAK,EAAE,MADqB;AAE5BF,MAAAA,OAAO,EAAE;AAFmB;AAR1B,GADiC;AAcvCG,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE;AADL,GAd+B;AAiBvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,OADH;AAELJ,IAAAA,KAAK,EAAE;AAFF,GAjBgC;AAqBvCK,EAAAA,OAAO,EAAE;AACPV,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,aAAa,EAAE;AAFR,GArB8B;AAyBvCU,EAAAA,OAAO,EAAE;AACPX,IAAAA,OAAO,EAAE,MADF;AAEPY,IAAAA,cAAc,EAAE;AAFT,GAzB8B;AA6BvCC,EAAAA,OAAO,EAAE;AACPR,IAAAA,KAAK,EAAE,KADA;AAEPS,IAAAA,WAAW,EAAE;AAFN,GA7B8B;AAiCvCC,EAAAA,MAAM,EAAE;AACNR,IAAAA,SAAS,EAAE,QADL;AAENR,IAAAA,UAAU,EAAE;AAFN;AAjC+B,CAAZ,CAAD,CAA5B;;AAsCA,IAAIiB,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAMC,OAAO,GAAGtB,SAAS,EAAzB;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEsB,OAAO,CAACpB,IAAzB;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEoB,OAAO,CAACZ,MAA/B;AAAuC,MAAA,KAAK,EAAEW,KAAK,CAACE;AAApD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAED,OAAO,CAACV,KAA9B;AAAqC,MAAA,KAAK,EAAES,KAAK,CAACG;AAAlD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEF,OAAO,CAACR,OAAhC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEQ,OAAO,CAACP,OAAxB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEO,OAAO,CAACL,OAAxB;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,SAAlC;AAAA,mCACWI,KAAK,CAACI,OADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAK,UAAA,SAAS,EAAEH,OAAO,CAACL,OAAxB;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,SAAlC;AAAA,kCACUI,KAAK,CAACK,MADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAK,QAAA,SAAS,EAAEJ,OAAO,CAACP,OAAxB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEO,OAAO,CAACL,OAAxB;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,SAAlC;AAAA,sCACcI,KAAK,CAACM,SADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAK,UAAA,SAAS,EAAEL,OAAO,CAACL,OAAxB;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,SAAlC;AAAA,sCACcI,KAAK,CAACO,UADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAyBE;AAAK,QAAA,SAAS,EAAEN,OAAO,CAACP,OAAxB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEO,OAAO,CAACL,OAAxB;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,SAAlC;AAAA,gCACQI,KAAK,CAACQ,IADd;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAK,UAAA,SAAS,EAAEP,OAAO,CAACL,OAAxB;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,SAAlC;AAAA,mCAEGI,KAAK,CAACS,OAAN,CAAcC,GAAd,CAAmBC,CAAD,IAAO;AACxB,kCAAO;AAAA,gCAAQA,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,aAFA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF,eAwCE;AAAK,QAAA,SAAS,EAAEV,OAAO,CAACP,OAAxB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEO,OAAO,CAACL,OAAxB;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,SAAlC;AAAA,wCACgBI,KAAK,CAACY,UADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAK,UAAA,SAAS,EAAEX,OAAO,CAACL,OAAxB;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,SAAlC;AAAA,qCAEGI,KAAK,CAACa,SAAN,CAAgBH,GAAhB,CAAqBC,CAAD,IAAO;AAC1B,kCAAO;AAAA,gCAAQA,CAAC,CAACT,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,aAFA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAxCF,eAuDE;AAAK,QAAA,SAAS,EAAED,OAAO,CAACP,OAAxB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEO,OAAO,CAACL,OAAxB;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,SAAlC;AAAA,yCAEGI,KAAK,CAACc,WAAN,CAAkBJ,GAAlB,CAAuBC,CAAD,IAAO;AAC5B,kCAAO;AAAA,gCAAQA,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,aAFA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAK,UAAA,SAAS,EAAEV,OAAO,CAACL,OAAxB;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,SAAlC;AAAA,2CAEGI,KAAK,CAACe,cAAN,CAAqBL,GAArB,CAA0BC,CAAD,IAAO;AAC/B,kCAAO;AAAA,gCAAQA,CAAC,CAACT,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,aAFA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cAvDF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgFD,CAlFD;;GAAIH,K;UACcpB,S;;;KADdoB,K;AAmFJ,eAAeA,KAAf","sourcesContent":["import Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: \"5rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flexBasis: \"45%\",\r\n    padding: \"1rem\",\r\n    paddingTop: \"2rem\",\r\n    boxShadow: \"none\",\r\n    [\"@media (max-width:780px)\"]: {\r\n      width: \"100%\",\r\n      padding: \"0\",\r\n    },\r\n  },\r\n  header: {\r\n    textAlign: \"center\",\r\n  },\r\n  media: {\r\n    height: \"18rem\",\r\n    width: \"100%\",\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  rowCont: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  subCont: {\r\n    width: \"50%\",\r\n    paddingLeft: \"0.5rem\",\r\n  },\r\n  league: {\r\n    textAlign: \"center\",\r\n    paddingTop: \"1rem\",\r\n  },\r\n}));\r\nvar Cards = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader className={classes.header} title={props.name} />\r\n      <CardMedia className={classes.media} image={props.flag} />\r\n      <CardContent className={classes.content}>\r\n        <div className={classes.rowCont}>\r\n          <div className={classes.subCont}>\r\n            <Typography variant=\"body2\" color=\"initial\">\r\n              Capital:{props.capital}\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.subCont}>\r\n            <Typography variant=\"body2\" color=\"initial\">\r\n              Region:{props.region}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        <div className={classes.rowCont}>\r\n          <div className={classes.subCont}>\r\n            <Typography variant=\"body2\" color=\"initial\">\r\n              Sub Region:{props.subRegion}\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.subCont}>\r\n            <Typography variant=\"body2\" color=\"initial\">\r\n              Population:{props.population}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        <div className={classes.rowCont}>\r\n          <div className={classes.subCont}>\r\n            <Typography variant=\"body2\" color=\"initial\">\r\n              Area:{props.area} km\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.subCont}>\r\n            <Typography variant=\"body2\" color=\"initial\">\r\n              Borders:\r\n              {props.borders.map((i) => {\r\n                return <span> {i},</span>;\r\n              })}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        <div className={classes.rowCont}>\r\n          <div className={classes.subCont}>\r\n            <Typography variant=\"body2\" color=\"initial\">\r\n              Native name: {props.nativeName}\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.subCont}>\r\n            <Typography variant=\"body2\" color=\"initial\">\r\n              languages:\r\n              {props.languages.map((i) => {\r\n                return <span> {i.name},</span>;\r\n              })}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        <div className={classes.rowCont}>\r\n          <div className={classes.subCont}>\r\n            <Typography variant=\"body2\" color=\"initial\">\r\n              Calling Codes:\r\n              {props.callingCode.map((i) => {\r\n                return <span> {i},</span>;\r\n              })}\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.subCont}>\r\n            <Typography variant=\"body2\" color=\"initial\">\r\n              Regional Blocks:\r\n              {props.regionalBlocks.map((i) => {\r\n                return <span> {i.name},</span>;\r\n              })}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\nexport default Cards;\r\n"]},"metadata":{},"sourceType":"module"}