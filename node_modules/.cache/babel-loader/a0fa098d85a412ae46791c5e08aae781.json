{"ast":null,"code":"var _jsxFileName = \"X:\\\\Programming\\\\countries\\\\src\\\\MainPage.jsx\",\n    _s = $RefreshSig$();\n\nimport Card from \"./Card\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport InitialReducer from \"./actions/Initial\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar MainPage = () => {\n  _s();\n\n  var disp = useDispatch();\n  useEffect(() => {\n    getInitialData();\n  }, []);\n  let state = useSelector(state => {\n    return state.InitialReducer.value;\n  });\n  var search = useSelector(state => {\n    return state.Search.value;\n  });\n\n  async function getInitialData() {\n    try {\n      const response = await axios.get(\"https://restcountries.eu/rest/v2/all\");\n      disp(InitialReducer(response.data));\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  if (search === []) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardCont\",\n      children: state && Object.keys(state).map(vals => {\n        var country = state[vals];\n        return /*#__PURE__*/_jsxDEV(Card, {\n          name: country[\"name\"],\n          flag: country[\"flag\"],\n          capital: country[\"capital\"],\n          region: country[\"region\"],\n          subRegion: country[\"subregion\"],\n          population: country[\"population\"],\n          area: country[\"area\"],\n          borders: country[\"borders\"],\n          nativeName: country[\"nativeName\"],\n          languages: country[\"languages\"],\n          regionalBlocks: country[\"regionalBlocs\"],\n          callingCode: country[\"callingCodes\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(MainPage, \"pE7+FCCncFRwZK8Cf3038Ahv/Iw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["X:/Programming/countries/src/MainPage.jsx"],"names":["Card","axios","useEffect","useDispatch","useSelector","InitialReducer","MainPage","disp","getInitialData","state","value","search","Search","response","get","data","error","console","Object","keys","map","vals","country"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;;AAEA,IAAIC,QAAQ,GAAG,MAAM;AAAA;;AACnB,MAAIC,IAAI,GAAGJ,WAAW,EAAtB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;AAGA,MAAIC,KAAK,GAAGL,WAAW,CAAEK,KAAD,IAAW;AACjC,WAAOA,KAAK,CAACJ,cAAN,CAAqBK,KAA5B;AACD,GAFsB,CAAvB;AAGA,MAAIC,MAAM,GAAGP,WAAW,CAAEK,KAAD,IAAW;AAClC,WAAOA,KAAK,CAACG,MAAN,CAAaF,KAApB;AACD,GAFuB,CAAxB;;AAGA,iBAAeF,cAAf,GAAgC;AAC9B,QAAI;AACF,YAAMK,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,sCAAV,CAAvB;AACAP,MAAAA,IAAI,CAACF,cAAc,CAACQ,QAAQ,CAACE,IAAV,CAAf,CAAJ;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF;;AACD,MAAIL,MAAM,KAAK,EAAf,EAAmB;AACjB,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACGF,KAAK,IACJS,MAAM,CAACC,IAAP,CAAYV,KAAZ,EAAmBW,GAAnB,CAAwBC,IAAD,IAAU;AAC/B,YAAIC,OAAO,GAAGb,KAAK,CAACY,IAAD,CAAnB;AAEA,4BACE,QAAC,IAAD;AACE,UAAA,IAAI,EAAEC,OAAO,CAAC,MAAD,CADf;AAEE,UAAA,IAAI,EAAEA,OAAO,CAAC,MAAD,CAFf;AAGE,UAAA,OAAO,EAAEA,OAAO,CAAC,SAAD,CAHlB;AAIE,UAAA,MAAM,EAAEA,OAAO,CAAC,QAAD,CAJjB;AAKE,UAAA,SAAS,EAAEA,OAAO,CAAC,WAAD,CALpB;AAME,UAAA,UAAU,EAAEA,OAAO,CAAC,YAAD,CANrB;AAOE,UAAA,IAAI,EAAEA,OAAO,CAAC,MAAD,CAPf;AAQE,UAAA,OAAO,EAAEA,OAAO,CAAC,SAAD,CARlB;AASE,UAAA,UAAU,EAAEA,OAAO,CAAC,YAAD,CATrB;AAUE,UAAA,SAAS,EAAEA,OAAO,CAAC,WAAD,CAVpB;AAWE,UAAA,cAAc,EAAEA,OAAO,CAAC,eAAD,CAXzB;AAYE,UAAA,WAAW,EAAEA,OAAO,CAAC,cAAD;AAZtB;AAAA;AAAA;AAAA;AAAA,gBADF;AAgBD,OAnBD;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;AACF,CA9CD;;GAAIhB,Q;UACSH,W,EAICC,W,EAGCA,W;;;KARXE,Q;AA+CJ,eAAeA,QAAf","sourcesContent":["import Card from \"./Card\";\r\nimport axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport InitialReducer from \"./actions/Initial\";\r\n\r\nvar MainPage = () => {\r\n  var disp = useDispatch();\r\n  useEffect(() => {\r\n    getInitialData();\r\n  }, []);\r\n  let state = useSelector((state) => {\r\n    return state.InitialReducer.value;\r\n  });\r\n  var search = useSelector((state) => {\r\n    return state.Search.value;\r\n  });\r\n  async function getInitialData() {\r\n    try {\r\n      const response = await axios.get(\"https://restcountries.eu/rest/v2/all\");\r\n      disp(InitialReducer(response.data));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  if (search === []) {\r\n    return (\r\n      <div className=\"cardCont\">\r\n        {state &&\r\n          Object.keys(state).map((vals) => {\r\n            var country = state[vals];\r\n\r\n            return (\r\n              <Card\r\n                name={country[\"name\"]}\r\n                flag={country[\"flag\"]}\r\n                capital={country[\"capital\"]}\r\n                region={country[\"region\"]}\r\n                subRegion={country[\"subregion\"]}\r\n                population={country[\"population\"]}\r\n                area={country[\"area\"]}\r\n                borders={country[\"borders\"]}\r\n                nativeName={country[\"nativeName\"]}\r\n                languages={country[\"languages\"]}\r\n                regionalBlocks={country[\"regionalBlocs\"]}\r\n                callingCode={country[\"callingCodes\"]}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default MainPage;\r\n"]},"metadata":{},"sourceType":"module"}